@using System.ComponentModel.DataAnnotations
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<EditForm EditContext="@editContext" OnValidSubmit="HandleOnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Nazwa: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <TextInput @bind-Value="@subject.Title" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Dedlajn: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <DateInput TValue="DateTime" @bind-Value="@subject.ExamDate" EnableMinMax="true" Min="@min" Max="@max"/>
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Czas: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <NumberInput TValue="int" @bind-Value="@subject.TimeForSubjectSet"/>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12 text-right">
            <Button Type="ButtonType.Button" Color="ButtonColor.Secondary" Class="float-end">Reset</Button>
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success" Class="float-end me-2">Dodaj</Button>
        </div>
    </div>

</EditForm>

@code {

     [Parameter] public Subjects.Subject SubjectToAdd { get; set; }
     [Parameter] public Subjects.SubjectAction Save { get; set; }

    [Parameter] public EventCallback OnClickCallback { get; set; }


    private Subjects.Subject subject = new();
    private EditContext? editContext;
    DateTime min = new DateTime(2025,6,1);
    DateTime max = new DateTime(2025,6,27);

    protected override void OnInitialized()
    {
        editContext = new EditContext(subject);
        base.OnInitialized();
    }

    public async Task HandleOnValidSubmit()
    {
        Save(subject);
    }

    private void ResetForm()
    {
        subject = new();
        editContext = new EditContext(subject);
    }
}