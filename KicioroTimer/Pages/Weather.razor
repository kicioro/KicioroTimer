@page "/subjects"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Przedmioty</PageTitle>

<h1>Lista przedmiotów</h1>

<Modal @ref="modal" />

@if (subjects == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <button class="btn btn-primary" @onclick="AddSubject">Add</button>
    <button class="btn btn-primary" @onclick="ShowSubjectModalComponent">Show</button>
    <table class="table">
        <thead>
        <tr>
            <th>Tytuł</th>
            <th>Termin</th>
            <th>Naumiejane</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var subject in subjects)
        {
            <tr>
                <td>@subject.Title</td>
                <td>@subject.ExamDate.ToString("MM/dd")</td>
                <td>@subject.TimeUsed.TotalHours</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    
    private Modal modal = default!;
    
    private async Task ShowSubjectModalComponent()
    {
        var subject = subjects.FirstOrDefault();
        var parameters = new Dictionary<string, object>();
        parameters.Add("subject", subject);
        await modal.ShowAsync<SubjectModalComponent>(title: subject.Title, parameters: parameters);
    }
    
    private List<Subject>? subjects;

    protected override async Task OnInitializedAsync()
    {
        subjects = new List<Subject>(); // await localStorage.GetItemAsync<List<Subject>>("subjects");
        await AddSubject();
    }

    private async Task AddSubject()
    {
        subjects.Add((new Subject()
        {
             Title = "Trudny przedmiot",
             ExamDate = new DateTime(2025,5,10),
             TimeForSubject = TimeSpan.FromHours(100),
             TimeUsed = TimeSpan.FromHours(0)
        }));
        await localStorage.SetItemAsync("subjects", subjects);
    }

    public class Subject
    {
        public string? Title { get; set; }

        public TimeSpan TimeForSubject { get; set; }

        public TimeSpan TimeUsed { get; set; }

        public DateTime ExamDate { get; set; }
    }

}


